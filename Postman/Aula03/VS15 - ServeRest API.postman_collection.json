{
	"info": {
		"_postman_id": "3510ac7a-6d46-4683-8b6c-5bf0606265a3",
		"name": "VS15 - ServeRest API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18111986",
		"_collection_link": "https://solar-robot-356173.postman.co/workspace/Vem-Ser~49d23e03-c4c9-42db-aabf-b9996e9c418b/collection/18111986-3510ac7a-6d46-4683-8b6c-5bf0606265a3?action=share&source=collection_link&creator=18111986"
	},
	"item": [
		{
			"name": "Login",
			"item": [
				{
					"name": "Login com sucesso",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"alyson.adm@email.com\",\r\n  \"password\": \"alyson123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Usuarios",
			"item": [
				{
					"name": "GET",
					"item": [
						{
							"name": "buscar usuario por id valido",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/usuarios/:id",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"usuarios",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Zo5rrBoSK7tC4YzS"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "buscar todos os usuarios",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/usuarios",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"usuarios"
									],
									"query": [
										{
											"key": "nome",
											"value": "Marcelo Dalcin",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "filtrar  usuario por nome",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/usuarios?nome={{nome}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"usuarios"
									],
									"query": [
										{
											"key": "nome",
											"value": "{{nome}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"// selecione aleatoriamente nome e adicione à variável de amebiente\r",
									"pm.environment.set(\"nome\", pm.environment.replaceIn('{{$randomFullName}}'));\r",
									"\r",
									"// selecione aleatoriamente email e adicione à variável de ambiente\r",
									"pm.environment.set(\"email\", pm.environment.replaceIn('{{$randomEmail}}'))\r",
									"\r",
									"// selecione aleatoriamente senha e adicione à variável password\r",
									"pm.environment.set(\"password\", pm.environment.replaceIn('{{$randomPassword}}'))\r",
									"\r",
									"// selecione aleatoriamente um valor booleano e adicione à variável administrador\r",
									"pm.environment.set(\"administrador\", pm.environment.replaceIn('{{$randomBoolean}}'))\r",
									"\r",
									"const usuario = {\r",
									"    \"nome\": pm.environment.get(\"nome\"),\r",
									"    \"email\": pm.environment.get(\"email\"),\r",
									"    \"password\": pm.environment.get(\"password\"),\r",
									"    \"administrador\": pm.environment.get(\"administrador\")\r",
									"}\r",
									"pm.environment.set(\"novoUsuario\", usuario)\r",
									"\r",
									"// criando uma requisição POST Cadastro de usuario\r",
									"const cadastrarUsuario = {\r",
									"    url: pm.environment.get(\"baseURL\") + \"/usuarios\",\r",
									"    method: \"POST\",\r",
									"    header: {\r",
									"        \"content-type\": \"application/json\",\r",
									"        \"accept\": \"application/json\"\r",
									"    },\r",
									"    body: {\r",
									"        mode: \"raw\",\r",
									"        raw: JSON.stringify(pm.environment.get(\"novoUsuario\"))\r",
									"    }\r",
									"};\r",
									"pm.sendRequest(cadastrarUsuario, function(err, res) {\r",
									"    pm.expect(err).is.null;\r",
									"    pm.environment.set(\"_id\", res.json()._id);\r",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"pm.sendRequest({\r",
									"    url: pm.environment.get(\"baseURL\") + \"/usuarios/\" + pm.environment.get(\"_id\"),\r",
									"    method: \"DELETE\"\r",
									"})"
								]
							}
						}
					]
				},
				{
					"name": "POST",
					"item": [
						{
							"name": "cadastrar usuario valido (Aux)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"Alyson Adm\",\r\n  \"email\": \"alyson.adm@email.com\",\r\n  \"password\": \"alyson123\",\r\n  \"administrador\": \"true\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/usuarios",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"response": []
						},
						{
							"name": "cadastrar usuario valido",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// selecione aleatoriamente nome e adicione à variável de amebiente\r",
											"pm.environment.set(\"nome\", pm.environment.replaceIn('{{$randomFullName}}'));\r",
											"\r",
											"// selecione aleatoriamente email e adicione à variável de ambiente\r",
											"pm.environment.set(\"email\", pm.environment.replaceIn('{{$randomEmail}}'))\r",
											"\r",
											"// selecione aleatoriamente senha e adicione à variável password\r",
											"pm.environment.set(\"password\", pm.environment.replaceIn('{{$randomPassword}}'))\r",
											"\r",
											"// selecione aleatoriamente um valor booleano e adicione à variável administrador\r",
											"pm.environment.set(\"administrador\", pm.environment.replaceIn('{{$randomBoolean}}'))\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code é 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifica cadastro com sucesso\", function () {\r",
											"    pm.expect(jsonData.message).to.eql(\"Cadastro realizado com sucesso\");\r",
											"    pm.expect(jsonData._id).to.not.be.null\r",
											"});\r",
											"\r",
											"pm.sendRequest({\r",
											"    url: pm.environment.get(\"baseURL\") + \"/usuarios/\" + jsonData._id,\r",
											"    method: \"DELETE\"\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"{{nome}}\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\",\r\n  \"administrador\": \"{{administrador}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/usuarios",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"response": []
						},
						{
							"name": "cadastrar usuario com email existente",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// selecione aleatoriamente nome e adicione à variável de amebiente\r",
											"pm.environment.set(\"nome\", pm.environment.replaceIn('{{$randomFullName}}'));\r",
											"\r",
											"// selecione aleatoriamente email e adicione à variável de ambiente\r",
											"pm.environment.set(\"email\", pm.environment.replaceIn('{{$randomEmail}}'))\r",
											"\r",
											"// selecione aleatoriamente senha e adicione à variável password\r",
											"pm.environment.set(\"password\", pm.environment.replaceIn('{{$randomPassword}}'))\r",
											"\r",
											"// selecione aleatoriamente um valor booleano e adicione à variável administrador\r",
											"pm.environment.set(\"administrador\", pm.environment.replaceIn('{{$randomBoolean}}'))\r",
											"\r",
											"const usuario = {\r",
											"    \"nome\": pm.environment.get(\"nome\"),\r",
											"    \"email\": pm.environment.get(\"email\"),\r",
											"    \"password\": pm.environment.get(\"password\"),\r",
											"    \"administrador\": pm.environment.get(\"administrador\")\r",
											"}\r",
											"pm.environment.set(\"novoUsuario\", usuario)\r",
											"\r",
											"// criando uma requisição POST Cadastro de usuario\r",
											"const cadastrarUsuario = {\r",
											"    url: pm.environment.get(\"baseURL\") + \"/usuarios\",\r",
											"    method: \"POST\",\r",
											"    header: {\r",
											"        \"content-type\": \"application/json\",\r",
											"        \"accept\": \"application/json\"\r",
											"    },\r",
											"    body: {\r",
											"        mode: \"raw\",\r",
											"        raw: JSON.stringify(pm.environment.get(\"novoUsuario\"))\r",
											"    }\r",
											"};\r",
											"pm.sendRequest(cadastrarUsuario, function(err, res) {\r",
											"    pm.expect(err).is.null;\r",
											"    pm.environment.set(\"_id\", res.json()._id);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code é 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifica mensagem de cadastro com email existente\", function () {\r",
											"    pm.expect(jsonData.message).to.eql(\"Este email já está sendo usado\");\r",
											"});\r",
											"\r",
											"pm.sendRequest({\r",
											"    url: pm.environment.get(\"baseURL\") + \"/usuarios/\" + pm.environment.get(\"_id\"),\r",
											"    method: \"DELETE\"\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"{{nome}}\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\",\r\n  \"administrador\": \"{{administrador}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/usuarios",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "PUT",
					"item": [
						{
							"name": "atualizar usuario valido (Manual)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// selecione aleatoriamente nome e adicione à variável de amebiente\r",
											"pm.environment.set(\"nome\", pm.environment.replaceIn('{{$randomFullName}}'));\r",
											"\r",
											"// selecione aleatoriamente email e adicione à variável de ambiente\r",
											"pm.environment.set(\"email\", pm.environment.replaceIn('{{$randomEmail}}'))\r",
											"\r",
											"// selecione aleatoriamente senha e adicione à variável password\r",
											"pm.environment.set(\"password\", pm.environment.replaceIn('{{$randomPassword}}'))\r",
											"\r",
											"// selecione aleatoriamente um valor booleano e adicione à variável administrador\r",
											"pm.environment.set(\"administrador\", pm.environment.replaceIn('{{$randomBoolean}}'))\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code é 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verifica atualização com sucesso\", function () {\r",
											"    pm.expect(jsonData.message).to.eql(\"Registro alterado com sucesso\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"Luiz Henrique de Castro Ramos\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\",\r\n  \"administrador\": \"{{administrador}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/usuarios/:id",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"usuarios",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{idValido}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "DELETE",
					"item": []
				}
			]
		},
		{
			"name": "Produtos",
			"item": [
				{
					"name": "Cadastrar produto válido (Manual)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFseXNvbi5hZG1AZW1haWwuY29tIiwicGFzc3dvcmQiOiJhbHlzb24xMjMiLCJpYXQiOjE3MzY3OTMwNTQsImV4cCI6MTczNjc5MzY1NH0.0_gqZ0AXy9O3piDAt-FPFDm_Qh-fkKk0SAeX1LsIY-s",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"Logitech MX Vertical Novo Produto\",\r\n  \"preco\": 470,\r\n  \"descricao\": \"Mouse\",\r\n  \"quantidade\": 381\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/produtos",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"produtos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cadastrar produto válido",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Gerar a massa de dados de maneira dinâmica\r",
									"pm.environment.set(\"produto\", pm.environment.replaceIn(\"{{$randomProductName}}\"));\r",
									"\r",
									"pm.environment.set(\"preco\", pm.environment.replaceIn(\"{{$randomInt}}\"));\r",
									"\r",
									"pm.environment.set(\"descricao\", pm.environment.replaceIn(\"{{$randomLoremSentence}}\"));\r",
									"\r",
									"pm.environment.set(\"quantidade\", pm.environment.replaceIn(\"{{$randomInt}}\"));\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenSeparado}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"{{produto}}\",\r\n  \"preco\": {{preco}},\r\n  \"descricao\": \"{{descricao}}\",\r\n  \"quantidade\": {{quantidade}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/produtos",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"produtos"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							"const login = {\r",
							"    url: pm.environment.get(\"baseURL\") + \"/login\",\r",
							"    method: \"POST\",\r",
							"    header: {\r",
							"        \"Content-Type\" : \"application/json\"\r",
							"    },\r",
							"    body: {\r",
							"        mode: \"raw\",\r",
							"        raw: JSON.stringify({\r",
							"            \"email\": \"alyson.adm@email.com\",\r",
							"            \"password\": \"alyson123\"\r",
							"        })\r",
							"    }\r",
							"};\r",
							"pm.sendRequest(login, function(err, res) {\r",
							"    pm.expect(err).is.null;\r",
							"    var auth = res.json().authorization;\r",
							"    pm.environment.set(\"tokenValido\", auth);\r",
							"    var auth2 = res.json().authorization.split(\" \", 2);\r",
							"    pm.environment.set(\"tokenSeparado\", auth2[1]);\r",
							"});"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		}
	]
}